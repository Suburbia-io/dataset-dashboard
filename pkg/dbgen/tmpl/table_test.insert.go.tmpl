{{define "table_test.insert"}}
func Test{{.RowType}}_Insert(t *testing.T) {
	t.Parallel()
	db, done := NewDBForTesting()
	defer done()

	// Insert a row.
	row := New{{.RowType}}ForTesting(db)
	if err := {{.RowType}}s.Insert(db, &row); err != nil {
		t.Fatal(err)
	}

	// Make sure row from database matches inserted row.
	row2, err := {{.RowType}}s.Get(
		db,
		{{range .KeyCols -}}
		row.{{.GoName}},
		{{end}})
	if err != nil {
		t.Fatal(err)
	}

	if !row.Equals(row2) {
		t.Fatalf("%v != %v", row, row2)
	}

	// Duplicate insert should give DBDuplicate.
	if err := {{.RowType}}s.Insert(db, &row); !errors.DBDuplicate.Is(err) {
		t.Fatal(err)
	}
}
{{end}}
